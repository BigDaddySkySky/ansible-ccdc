---
# ================== PURPOSE ==================
# Test Alert System
# - Validates Discord webhook connectivity
# - Tests alert script functionality
# - Verifies rate limiting behavior
# =============================================
# USAGE:
#   ansible-playbook playbooks/test_alerts.yml
#   ansible-playbook playbooks/test_alerts.yml --tags critical

- name: Test Alert Infrastructure
  hosts: localhost
  gather_facts: false

  tasks:
    - name: Test critical alert
      ansible.builtin.uri:
        url: "{{ discord_webhook_url }}"
        method: POST
        body_format: json
        body:
          content: "🚨 **TEST ALERT - CRITICAL**\nThis is a test of the critical alert system\n**Time:** {{ lookup('pipe', 'date') }}"
        status_code: [200, 204]
      when: discord_webhook_url is defined
      tags: [critical, test]

    - name: Test warning alert
      ansible.builtin.uri:
        url: "{{ discord_webhook_url }}"
        method: POST
        body_format: json
        body:
          content: "⚠️ **TEST ALERT - WARNING**\nThis is a test of the warning alert system\n**Time:** {{ lookup('pipe', 'date') }}"
        status_code: [200, 204]
      when: discord_webhook_url is defined
      tags: [warning, test]

    - name: Test info alert
      ansible.builtin.uri:
        url: "{{ discord_webhook_url }}"
        method: POST
        body_format: json
        body:
          content: "ℹ️ **TEST ALERT - INFO**\nThis is a test of the info alert system\n**Time:** {{ lookup('pipe', 'date') }}"
        status_code: [200, 204]
      when: discord_webhook_url is defined
      tags: [info, test]

- name: Test Alert Script on Linux Hosts
  hosts: linux
  become: true
  gather_facts: true
  tags: [script_test]

  tasks:
    - name: Test alert script - critical
      ansible.builtin.command:
        cmd: >
          python3 /usr/local/bin/ccdc_alert.py
          --webhook "{{ discord_webhook_url }}"
          --severity critical
          --message "Test critical alert from {{ inventory_hostname }}"
          --host "{{ inventory_hostname }}"
          --force
      when: discord_webhook_url is defined
      changed_when: false
      tags: [critical]

    - name: Test alert script - warning with rate limiting
      ansible.builtin.command:
        cmd: >
          python3 /usr/local/bin/ccdc_alert.py
          --webhook "{{ discord_webhook_url }}"
          --severity warning
          --message "Test warning alert from {{ inventory_hostname }}"
          --host "{{ inventory_hostname }}"
          --cooldown 60
      when: discord_webhook_url is defined
      changed_when: false
      tags: [warning, rate_limit]

    - name: Test duplicate alert (should be suppressed)
      ansible.builtin.command:
        cmd: >
          python3 /usr/local/bin/ccdc_alert.py
          --webhook "{{ discord_webhook_url }}"
          --severity warning
          --message "Test warning alert from {{ inventory_hostname }}"
          --host "{{ inventory_hostname }}"
          --cooldown 60
      when: discord_webhook_url is defined
      changed_when: false
      register: duplicate_test
      tags: [rate_limit]

    - name: Verify duplicate was suppressed
      ansible.builtin.debug:
        msg: "Duplicate alert properly suppressed"
      when:
        - discord_webhook_url is defined
        - duplicate_test.rc == 0
      tags: [rate_limit]

- name: Test Honeypot Trigger Detection
  hosts: linux
  become: true
  tags: [honeypot_test]

  tasks:
    - name: Simulate honeypot file access
      ansible.builtin.stat:
        path: "{{ intrusion_detection_honeypot_files[0] | default('/root/.ssh/authorized_keys_backup') }}"
      when: intrusion_detection_honeypot_enabled | default(true)
      register: honeypot_test

    - name: Wait for honeypot alert
      ansible.builtin.pause:
        seconds: 5
      when: honeypot_test is defined

    - name: Check honeypot watcher logs
      ansible.builtin.command: journalctl -u ccdc-honeypot-watcher -n 10 --no-pager
      register: honeypot_logs
      changed_when: false

    - name: Display honeypot watcher activity
      ansible.builtin.debug:
        var: honeypot_logs.stdout_lines

- name: Completion Summary
  hosts: localhost
  gather_facts: false

  tasks:
    - name: Send test completion notification
      ansible.builtin.uri:
        url: "{{ discord_webhook_url }}"
        method: POST
        body_format: json
        body:
          content: "✅ **Alert System Test Complete**\nAll alert channels verified\n**Time:** {{ lookup('pipe', 'date') }}"
        status_code: [200, 204]
      when: discord_webhook_url is defined
      failed_when: false
